{"version":3,"sources":["selectors/getGames.ts","components/Home.tsx","actions/index.ts","constants/ActionTypes.ts","App.tsx","serviceWorker.ts","initialState.ts","typeguards/index.ts","index.tsx","reducers/index.ts"],"names":["getGames","state","searchHelper","g","search","name","toLocaleLowerCase","startsWith","filter","games","slice","game","new","top","connect","dispatch","type","searchAction","filterAction","useState","searchIsActive","setSearchIsActive","className","onClick","onFocus","onBlur","classnames","placeholder","onKeyUp","event","currentTarget","value","length","map","index","key","x","y","title","alt","image","src","App","store","Boolean","window","location","hostname","match","initialState","isFilterAction","action","includes","isSearchAction","createStore","compose","devToolsEnhancer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e953dbaa.chunk.js","sourcesContent":["export const getGames = (state: State) => {\r\n    const searchHelper = (state: State) => (g: Game): boolean => {\r\n        if (state.search === null) {\r\n            return true\r\n        }\r\n\r\n        return g.name.toLocaleLowerCase().startsWith(state.search.toLocaleLowerCase())\r\n    }\r\n\r\n    if (state.filter === 'all') {\r\n        return [...state.games].filter(searchHelper(state)).slice()\r\n    } else if (state.filter === 'new') {\r\n        return state.games.filter((game) => game.new).filter(searchHelper(state)).slice()\r\n    }\r\n\r\n    return state.games.filter((game) => game.top).filter(searchHelper(state)).slice()\r\n}\r\n","import React, {useState} from 'react'\r\nimport {getGames} from \"../selectors/getGames\";\r\nimport {connect, MapDispatchToProps} from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport {filterAction, searchAction} from \"../actions\";\r\nimport {Action, Dispatch} from \"redux\";\r\n\r\ninterface Props {\r\n    games: Array<Game>\r\n}\r\n\r\ninterface DispatchProps {\r\n    search: typeof searchAction,\r\n    filter: typeof filterAction\r\n}\r\n\r\nconst Home: React.FC<Props & DispatchProps> = ({games, filter, search}) => {\r\n    const [searchIsActive, setSearchIsActive] = useState(false);\r\n\r\n    return (<>\r\n        <header>\r\n            <h1>Slots</h1>\r\n            <span className='all' onClick={() => filter('all')}>ALL</span>\r\n        <span className='new' onClick={() => filter('new')}>NEW</span>\r\n        <span  className='top' onClick={() => filter('top')}>TOP</span>\r\n        <input onFocus={() => setSearchIsActive(true)}\r\n               onBlur={() => setSearchIsActive(false)}\r\n               className={classnames('search', {\r\n                   'search-active': searchIsActive\r\n               })}\r\n               placeholder=' Search'\r\n               type='text'\r\n               onKeyUp={(event: React.KeyboardEvent<HTMLInputElement>) =>\r\n            event.currentTarget.value.length > 0 ? search(event.currentTarget.value) : search(null)}/>\r\n        </header>\r\n        <main className='games'>\r\n            <ul className=\"games__list\">\r\n            {games.map((g, index) => {\r\n                return (<li key={'games-list-' + index} className={classnames('box', {\r\n                    'double-box': g.x === 2 && g.y === 2\r\n                })}>\r\n                    <figure>\r\n                        <img title={g.name} alt={g.image} src={'./images/' + g.image}/>\r\n                    </figure>\r\n                </li>);\r\n            })}\r\n            </ul>\r\n        </main>\r\n    </>)\r\n}\r\n\r\nconst mapStateToProps = (state: State): Props => {\r\n    return {\r\n        games: getGames(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = (dispatch: Dispatch<Action>) => {\r\n    return {\r\n        search: (search) => (\r\n            dispatch(searchAction(search))\r\n        ),\r\n        filter: (filter) => (\r\n            dispatch(filterAction(filter))\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import {FilterAction, SearchAction} from \"../reducers\";\r\nimport {SET_FILTER, SET_SEARCH} from \"../constants/ActionTypes\";\r\n\r\nexport const searchAction = (search: string | null): SearchAction => {\r\n    return {\r\n        type: SET_SEARCH,\r\n        search\r\n    }\r\n}\r\n\r\nexport const filterAction = (filter: filter): FilterAction => {\r\n    return {\r\n        type: SET_FILTER,\r\n        filter\r\n    }\r\n}\r\n","export const SET_FILTER = 'SET_FILTER';\r\nexport const SET_SEARCH = 'SET_SEARCH';\r\n","import React from 'react';\r\nimport {Store} from \"redux\";\r\nimport {Provider} from \"react-redux\";\r\nimport Home from \"./components/Home\";\r\n\r\nconst App = ({store}: {store: Store<State>}) => (\r\n    <Provider store={store}>\r\n      <Home/>\r\n    </Provider>\r\n)\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState: State = {\r\n    games: [{\r\n        name: 'Hotline',\r\n        x: 1,\r\n        y: 1,\r\n        top: false,\r\n        new: true,\r\n        image: 'hotline.png'\r\n    },\r\n        {\r\n            name: 'Fruit Spin',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'fruit-spin.png'\r\n        },\r\n        {\r\n            name: 'Jumanji',\r\n            x: 2,\r\n            y: 2,\r\n            top: true,\r\n            new: true,\r\n            image: 'jumanji.png'\r\n        },\r\n\t\t{\r\n            name: 'Near Jungle',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'near-jungle.png'\r\n        },\r\n\t\t{\r\n            name: 'Day of the dead',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'day-of-the-dead.png'\r\n        },\r\n\t\t{\r\n            name: 'Day of the dead',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'day-of-the-dead.png'\r\n        },\r\n\t\t{\r\n            name: 'Dr Jekyll & Mr Hyde',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'dr-jekyll&mr-hyde.png'\r\n        },\r\n\t\t{\r\n            name: 'Sea of tranquility',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'sea-of-tranquility.png'\r\n        },\r\n\t\t{\r\n            name: 'Aloha ! cluster rays',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'aloha.png'\r\n        },\r\n\t\t{\r\n            name: 'Jack hammer',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'jack-hammer.png'\r\n        },\r\n\t\t{\r\n            name: 'Spinata grande',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'spinata-grande.png'\r\n        },\r\n\t\t{\r\n            name: 'Sugar smash',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'sugar-smash.png'\r\n        },\r\n\t\t{\r\n            name: 'Fafa twins',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'fa-fa-twins.png'\r\n        },\r\n\t\t{\r\n            name: 'Smokin hot gems',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'smokin-hot-gems.png'\r\n        },\r\n\t\t{\r\n            name: 'Gonzos quest',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'smokin-hot-gems.png'\r\n        },\r\n\t\t{\r\n            name: 'Gonzos quest',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'smokin-hot-gems.png'\r\n        },\r\n\t\t\t\t{\r\n            name: '3 hit pay pulse',\r\n            x: 2,\r\n            y: 2,\r\n            top: true,\r\n            new: true,\r\n            image: '3-hit-pay-pulse.png'\r\n        },\r\n\t\t\t\t{\r\n            name: 'Spinata grande',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'spinata-grande.png'\r\n        },\r\n\t\t{\r\n            name: 'Sugar smash',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'sugar-smash.png'\r\n        },\r\n\t\t{\r\n            name: 'Fafa twins',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'fa-fa-twins.png'\r\n        },\r\n\t\t{\r\n            name: 'Smokin hot gems',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'smokin-hot-gems.png'\r\n        },\r\n\t\t{\r\n            name: 'Gonzos quest',\r\n            x: 1,\r\n            y: 1,\r\n            top: true,\r\n            new: false,\r\n            image: 'smokin-hot-gems.png'\r\n        },\r\n\t\t\t\t{\r\n            name: 'Smokin hot gems',\r\n            x: 1,\r\n            y: 1,\r\n            top: false,\r\n            new: true,\r\n            image: 'smokin-hot-gems.png'\r\n        }\r\n\t\t],\r\n    filter: 'all',\r\n    search: null\r\n}\r\n","import {Action} from \"redux\";\r\nimport {FilterAction, SearchAction} from \"../reducers\";\r\n\r\nexport const isFilterAction = (action: Action | FilterAction): action is FilterAction => {\r\n  return 'filter' in action && ['all', 'top', 'new'].includes(action.filter)\r\n}\r\n\r\nexport const isSearchAction = (action: Action | SearchAction): action is SearchAction => {\r\n  return 'search' in action && (typeof action.search === 'string' || action.search === null)\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {initialState} from \"./initialState\";\r\nimport {reducer} from \"./reducers\";\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport { createStore, compose } from \"redux\";\r\n\r\nconst store = createStore(\r\n    reducer, initialState,\r\n    compose(\r\n        devToolsEnhancer({}))\r\n)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App store={store}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as actionTypes from '../constants/ActionTypes'\r\nimport {initialState} from '../initialState'\r\nimport {Action} from 'redux'\r\nimport {isFilterAction, isSearchAction} from \"../typeguards\";\r\n\r\nexport interface FilterAction extends Action {\r\n    filter: filter\r\n}\r\n\r\nexport interface SearchAction extends Action {\r\n    search: string | null\r\n}\r\n\r\nexport const reducer = (state: State = initialState, action: FilterAction | SearchAction): State => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_FILTER: {\r\n            if (isFilterAction(action)) {\r\n                const {filter} = action\r\n                return {\r\n                    ...state,\r\n                    filter\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        case actionTypes.SET_SEARCH: {\r\n            if (isSearchAction(action)) {\r\n                const {search} = action\r\n                return {\r\n                    ...state,\r\n                    search\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n"],"sourceRoot":""}